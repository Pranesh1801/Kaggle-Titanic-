# -*- coding: utf-8 -*-
"""Kaggle titanic solution

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kLk4GmGbpj7hximld8RAqaV0bA3JuAjw
"""

import numpy as np 
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt 
from sklearn.model_selection import train_test_split as tts
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix,accuracy_score

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

titanic_data=pd.read_csv('train.csv')
print(titanic_data.shape,"\n",titanic_data.info())

titanic_data.drop(columns=['PassengerId','Name','Ticket','Fare','Cabin','Embarked'],inplace=True)
print(titanic_data.info())

titanic_data['Sex']=titanic_data['Sex'].astype('category')
titanic_data['Sex']=titanic_data['Sex'].cat.codes
print(titanic_data.info())

titanic_data['Age'].fillna(titanic_data['Age'].median(),inplace=True)
titanic_data['Age']=titanic_data['Age'].astype(int)
titanic_data.drop_duplicates(inplace=True)
print(titanic_data.info())

titanic_data.skew()

titanic_data.SibSp=np.sqrt(titanic_data.SibSp)
titanic_data.Parch=np.sqrt(titanic_data.Parch)

titanic_data.Parch=titanic_data.Parch.astype(int)
titanic_data.SibSp=titanic_data.SibSp.astype(int)
titanic_data.drop_duplicates(inplace=True)

print(titanic_data.skew())
print(titanic_data.info())
plt.figure()
sns.displot(titanic_data['SibSp'])
plt.show()
sns.displot(titanic_data['Parch'])
plt.show()
sns.heatmap(titanic_data.corr(),annot=True)

x=titanic_data[['Pclass','Sex','Age','SibSp','Parch']]
y=pd.DataFrame(titanic_data['Survived'],columns=['Survived'])
print(x.info(),y.info())

x_train,x_test,y_train,y_test=tts(x,y,train_size=0.7)
predictor=LogisticRegression()
predictor.fit(x_train,y_train)

prediction=predictor.predict(x_test)
print(accuracy_score(prediction,y_test))

print(confusion_matrix(prediction,y_test))

test_data=pd.read_csv('test.csv')
print(test_data.info())

test_data.drop(columns=['PassengerId','Name','Ticket','Fare','Cabin','Embarked'],inplace=True)
print(test_data.info())

test_data.Age.fillna(test_data.Age.median(),inplace=True)
test_data.Age=test_data.Age.astype(int)
print(test_data.info())

test_data.Sex=test_data.Sex.astype('category')
test_data.Sex=test_data.Sex.cat.codes
print(test_data.info())

print(test_data.skew())

test_data.SibSp=np.sqrt(test_data.SibSp)
test_data.Parch=np.sqrt(test_data.SibSp)
test_data.Parch=test_data.Parch.astype(int)
test_data.SibSp=test_data.SibSp.astype(int)
print(test_data.info())
print(test_data.skew())

final_result=predictor.predict(test_data)
final_result=pd.DataFrame(final_result,columns=['Survived'])
print(final_result.head(10))

final_submission=pd.read_csv('test.csv')
final_submission=pd.DataFrame(final_submission.PassengerId,columns=['PassengerId'])
print(final_submission.isnull().sum())
print(final_submission.shape,final_result.shape)
final_submission=pd.concat([final_submission,final_result],axis='columns')
print(final_submission.info())
print(final_submission)